function [prdData, info] = predict_Lacerta_schreiberi(par, data, auxData)
% file generated by prt_predict

% unpack par, data, auxData
cPar = parscomp_st(par); vars_pull(par);
v2struct(par); v2struct(cPar); v2struct(data); v2struct(auxData);

% compute temperature correction factors
pars_T = T_A;
TC_ab = tempcorr(temp.ab, T_ref, pars_T);
TC_am = tempcorr(temp.am, T_ref, pars_T);
TC_Ri = tempcorr(temp.Ri, T_ref, pars_T);
TC_tp = tempcorr(temp.tp, T_ref, pars_T);
TC_tpm = tempcorr(temp.tpm, T_ref, pars_T);
TC_LN = tempcorr(temp.LN, T_ref, pars_T);
TC_Tab = tempcorr(C2K(Tab(:,1)), T_ref, T_A);
TC_sa = tempcorr(temp.tL_sa, T_ref, T_A);
TC_fem = tempcorr(temp.tL_fem, T_ref, T_A);
TC_ma = tempcorr(temp.tL_ma, T_ref, T_A);
tTC = [temp.tL_sa(:,1), tempcorr(C2K(temp.tL_sa(:,2)), T_ref, T_A)];

%%%%%%%%%%%%%%%%%%
% Zero-variate data

% life cycle
pars_tR = [g; k; l_T; v_Hb; v_Hx; v_Hp; t_N * k_M * TC_am];  % compose parameter vector
[tau_R, tau_p, tau_x, tau_b, l_R, l_p, l_x, l_b, info] = get_tR(pars_tR, f); % -, scaled times & lengths

if info == 0
  prdData = []; return;
end

% initial
pars_UE0 = [V_Hb; g; k_J; k_M; v]; % compose parameter vector
U_E0 = initial_scaled_reserve(f, pars_UE0); % d.cm^2, initial scaled reserve
Ww_0 = U_E0 * p_Am * w_E/ mu_E/ d_V; % g, initial wet weight

% birth
L_b = L_m * l_b;                  % cm, structural length at birth
a_b = t_0 + tau_b/ k_M/ TC_ab;    % d, age at birth
Lw_b = L_b/ del_M;                % cm, physical length at birth
Ww_b = L_b^3 * (1 + f * ome);     % g, wet weight at birth

% puberty
L_p = L_m * l_p; % cm, structural length at puberty
Lw_p = L_p/ del_M; % cm, physical length at puberty
t_p = (tau_p - tau_b)/ k_M/ TC_tp; % d, time since birth at puberty

% ultimate
l_i = f - l_T; % -, scaled ultimate length
L_i = L_m * l_i; % cm, ultimate structural length
Lw_i = f * L_m/ del_M; % cm, ultimate physical length
Ww_i = L_i^3 * (1 + f * ome); % g, ultimate wet weight 
pars_tm = [g; l_T; h_a/ k_M^2; s_G]; % compose parameter vector
tau_m = get_tm_s(pars_tm, f, l_b); % -, scaled mean life span
a_m = tau_m/ k_M/ TC_am; % d, mean life span

% reproduction
pars_R = [kap; kap_R; g; k_J; k_M; L_T; v; U_Hb; U_Hp]; % compose parameter vector
R_i = TC_Ri * reprod_rate(L_i, f, pars_R); % #/d, ultimate reproduction rate

% males
p_Am_m = z_m * p_M/ kap; % J/d.cm^2, {p_Am} spec assimilation flux
E_m_m = p_Am_m/ v; % J/cm^3, reserve capacity [E_m]
g_m = E_G/ (kap* E_m_m); % -, energy investment ratio
m_Em_m = y_E_V * E_m_m/ E_G; % mol/mol, reserve capacity
ome_m = m_Em_m * w_E/ w_V; % -, contribution of reserve to weight
L_mm = v/ k_M/ g_m; L_im = f * L_mm; % cm, max ultimate length
if ~exist('v_Hpm','var'); v_Hpm = v_Hp; end; pars_tpm = [g_m k l_T v_Hb v_Hpm];
pars_tpm = [g_m k l_T v_Hb v_Hpm]; % pars for males
[tau_pm, tau_bm, l_pm] = get_tp(pars_tpm, f); % - , scaled time, length
L_pm = L_mm * l_pm; % cm, structural length at puberty
t_pm = (tau_pm - tau_bm)/ k_M/ TC_tpm; % d, time since birth at puberty
Lw_pm = L_pm/ del_M; % cm, physical at puberty
Lw_im = f * L_mm/ del_M; % cm, ultimate physical length
Ww_im = L_im^3 * (1 + f * ome_m); % g, ultimate wet weight

% pack to output
prdData.ab = a_b;
prdData.am = a_m;
prdData.Lb = Lw_b;
prdData.Lp = Lw_p;
prdData.Lpm = Lw_pm;
prdData.Li = Lw_i;
prdData.Lim = Lw_im;
prdData.Ww0 = Ww_0;
prdData.Wwb = Ww_b;
prdData.Ri = R_i;
prdData.Wwi = Ww_i;
prdData.Wwim = Ww_im;
prdData.tp = t_p;
prdData.tpm = t_pm;

%%%%%%%%%%%%%%%%%%
% Univariate data

% length - yearly fecundity
pars_R = [kap; kap_R; g; k_J; k_M; L_T; v; U_Hb; U_Hp]; % compose parameter vector
LN = TC_LN * 365 * reprod_rate(LN(:,1) * del_M, f_LN, pars_R); % #, yearly fecundity

% age at birth at different temperatures
Eab = a_b ./ TC_Tab; 
  
% time-SVL; subadults
pars_lb = [g k v_Hb]; 
%
r_B = k_M/(3. * (1 + f/ g)); % 1/d, von Bert growth rate
[time, rows, occurence] = unique(tL_sa(:,1)); % pulls out unique time elements
[t, L] = ode45(@get_L, time, L_b, [], tTC, r_B, L_i); % d, cm
EL = [];
for i = 1:length(rows)
  EL = [EL; L(i) + ones(length(find(occurence == i)),1)];    
end
ELw_fsa = EL/ del_M;  
  
% time-SVL; females
pars_lb = [g k v_Hb]; 
%
L_b = L_m * get_lb(pars_lb, f_fem); L_i = f_fem * L_m;
ir_B = 3/ k_M + 3 * L_i/ v; rT_B = TC_fem/ ir_B; % yr, 1/von Bert growth rate
ELw_ffem = (L_i - (L_i - L_b) * exp( - rT_B * tL_fem(:,1)))/ del_M; % cm, SVL f_fem
  
% time-SVL; males
pars_lb = [g k v_Hb]; 
%
L_b = L_mm * get_lb(pars_lb, f_ma); L_i = f_ma * L_mm;
ir_B = 3/ k_M + 3 * L_i/ v; rT_B = TC_ma/ ir_B; % yr, 1/von Bert growth rate
ELw_fma = (L_i - (L_i - L_b) * exp( - rT_B * tL_ma(:,1)))/ del_M; % cm, SVL f_ma

% SVL-wet wight: L-Ww
EWw = (LWw(:,1) * del_M).^3 * (1 + f_w * w); % g, wet mass


% pack to output
prdData.LN = LN;
prdData.Tab = Eab;
prdData.tL_sa = ELw_fsa;
prdData.tL_fem = ELw_ffem;
prdData.tL_ma = ELw_fma;
prdData.LWw = EWw;
    
end

   
function dL = get_L(t, L, tTC, r_B, L_i)
    TC = spline1(t, tTC);
    dL = TC * r_B * (L_i - L);
end

